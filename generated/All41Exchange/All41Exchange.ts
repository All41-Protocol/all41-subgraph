// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DepositedState extends ethereum.Event {
  get params(): DepositedState__Params {
    return new DepositedState__Params(this);
  }
}

export class DepositedState__Params {
  _event: DepositedState;

  constructor(event: DepositedState) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get dai(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get cDai(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get total(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get daiAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get tradingFeeInvested(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OwnershipChanged extends ethereum.Event {
  get params(): OwnershipChanged__Params {
    return new OwnershipChanged__Params(this);
  }
}

export class OwnershipChanged__Params {
  _event: OwnershipChanged;

  constructor(event: OwnershipChanged) {
    this._event = event;
  }

  get oldOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TradingFeeRedeemed extends ethereum.Event {
  get params(): TradingFeeRedeemed__Params {
    return new TradingFeeRedeemed__Params(this);
  }
}

export class TradingFeeRedeemed__Params {
  _event: TradingFeeRedeemed;

  constructor(event: TradingFeeRedeemed) {
    this._event = event;
  }

  get redeemed(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WalletAmountRedeemed extends ethereum.Event {
  get params(): WalletAmountRedeemed__Params {
    return new WalletAmountRedeemed__Params(this);
  }
}

export class WalletAmountRedeemed__Params {
  _event: WalletAmountRedeemed;

  constructor(event: WalletAmountRedeemed) {
    this._event = event;
  }

  get wallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dai(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get cDai(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get daiRedeemed(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class All41Exchange extends ethereum.SmartContract {
  static bind(address: Address): All41Exchange {
    return new All41Exchange("All41Exchange", address);
  }

  _tradingFeeRate(): BigInt {
    let result = super.call(
      "_tradingFeeRate",
      "_tradingFeeRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try__tradingFeeRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_tradingFeeRate",
      "_tradingFeeRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAmountInvested(wallet: Address): BigInt {
    let result = super.call(
      "getAmountInvested",
      "getAmountInvested(address):(uint256)",
      [ethereum.Value.fromAddress(wallet)]
    );

    return result[0].toBigInt();
  }

  try_getAmountInvested(wallet: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAmountInvested",
      "getAmountInvested(address):(uint256)",
      [ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAmountInvestedWithInterest(wallet: Address): BigInt {
    let result = super.call(
      "getAmountInvestedWithInterest",
      "getAmountInvestedWithInterest(address):(uint256)",
      [ethereum.Value.fromAddress(wallet)]
    );

    return result[0].toBigInt();
  }

  try_getAmountInvestedWithInterest(
    wallet: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAmountInvestedWithInterest",
      "getAmountInvestedWithInterest(address):(uint256)",
      [ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getInterestPayable(wallet: Address): BigInt {
    let result = super.call(
      "getInterestPayable",
      "getInterestPayable(address):(uint256)",
      [ethereum.Value.fromAddress(wallet)]
    );

    return result[0].toBigInt();
  }

  try_getInterestPayable(wallet: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getInterestPayable",
      "getInterestPayable(address):(uint256)",
      [ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOwner(): Address {
    let result = super.call("getOwner", "getOwner():(address)", []);

    return result[0].toAddress();
  }

  try_getOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("getOwner", "getOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTradingFeePayable(): BigInt {
    let result = super.call(
      "getTradingFeePayable",
      "getTradingFeePayable():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTradingFeePayable(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTradingFeePayable",
      "getTradingFeePayable():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getcDaiOwned(wallet: Address): BigInt {
    let result = super.call("getcDaiOwned", "getcDaiOwned(address):(uint256)", [
      ethereum.Value.fromAddress(wallet)
    ]);

    return result[0].toBigInt();
  }

  try_getcDaiOwned(wallet: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getcDaiOwned",
      "getcDaiOwned(address):(uint256)",
      [ethereum.Value.fromAddress(wallet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DepositToWalletPoolCall extends ethereum.Call {
  get inputs(): DepositToWalletPoolCall__Inputs {
    return new DepositToWalletPoolCall__Inputs(this);
  }

  get outputs(): DepositToWalletPoolCall__Outputs {
    return new DepositToWalletPoolCall__Outputs(this);
  }
}

export class DepositToWalletPoolCall__Inputs {
  _call: DepositToWalletPoolCall;

  constructor(call: DepositToWalletPoolCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get daiAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositToWalletPoolCall__Outputs {
  _call: DepositToWalletPoolCall;

  constructor(call: DepositToWalletPoolCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get interestManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get dai(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get tradingFeeRate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetTradingFeeRateCall extends ethereum.Call {
  get inputs(): SetTradingFeeRateCall__Inputs {
    return new SetTradingFeeRateCall__Inputs(this);
  }

  get outputs(): SetTradingFeeRateCall__Outputs {
    return new SetTradingFeeRateCall__Outputs(this);
  }
}

export class SetTradingFeeRateCall__Inputs {
  _call: SetTradingFeeRateCall;

  constructor(call: SetTradingFeeRateCall) {
    this._call = call;
  }

  get tradingFeeRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTradingFeeRateCall__Outputs {
  _call: SetTradingFeeRateCall;

  constructor(call: SetTradingFeeRateCall) {
    this._call = call;
  }
}

export class SetTradingFeeRecipientCall extends ethereum.Call {
  get inputs(): SetTradingFeeRecipientCall__Inputs {
    return new SetTradingFeeRecipientCall__Inputs(this);
  }

  get outputs(): SetTradingFeeRecipientCall__Outputs {
    return new SetTradingFeeRecipientCall__Outputs(this);
  }
}

export class SetTradingFeeRecipientCall__Inputs {
  _call: SetTradingFeeRecipientCall;

  constructor(call: SetTradingFeeRecipientCall) {
    this._call = call;
  }

  get tradingFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTradingFeeRecipientCall__Outputs {
  _call: SetTradingFeeRecipientCall;

  constructor(call: SetTradingFeeRecipientCall) {
    this._call = call;
  }
}

export class WithdrawAmountCall extends ethereum.Call {
  get inputs(): WithdrawAmountCall__Inputs {
    return new WithdrawAmountCall__Inputs(this);
  }

  get outputs(): WithdrawAmountCall__Outputs {
    return new WithdrawAmountCall__Outputs(this);
  }
}

export class WithdrawAmountCall__Inputs {
  _call: WithdrawAmountCall;

  constructor(call: WithdrawAmountCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get daiAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawAmountCall__Outputs {
  _call: WithdrawAmountCall;

  constructor(call: WithdrawAmountCall) {
    this._call = call;
  }
}

export class WithdrawTradingFeeCall extends ethereum.Call {
  get inputs(): WithdrawTradingFeeCall__Inputs {
    return new WithdrawTradingFeeCall__Inputs(this);
  }

  get outputs(): WithdrawTradingFeeCall__Outputs {
    return new WithdrawTradingFeeCall__Outputs(this);
  }
}

export class WithdrawTradingFeeCall__Inputs {
  _call: WithdrawTradingFeeCall;

  constructor(call: WithdrawTradingFeeCall) {
    this._call = call;
  }
}

export class WithdrawTradingFeeCall__Outputs {
  _call: WithdrawTradingFeeCall;

  constructor(call: WithdrawTradingFeeCall) {
    this._call = call;
  }
}

export class WithdrawWalletInterestCall extends ethereum.Call {
  get inputs(): WithdrawWalletInterestCall__Inputs {
    return new WithdrawWalletInterestCall__Inputs(this);
  }

  get outputs(): WithdrawWalletInterestCall__Outputs {
    return new WithdrawWalletInterestCall__Outputs(this);
  }
}

export class WithdrawWalletInterestCall__Inputs {
  _call: WithdrawWalletInterestCall;

  constructor(call: WithdrawWalletInterestCall) {
    this._call = call;
  }

  get wallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawWalletInterestCall__Outputs {
  _call: WithdrawWalletInterestCall;

  constructor(call: WithdrawWalletInterestCall) {
    this._call = call;
  }
}
